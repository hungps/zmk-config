/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&sk {
    release-after-ms = <900>;
    quick-release;
};

&sl { ignore-modifiers; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        capsword {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };

        toggle_gam {
            bindings = <&tog 1>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        comma_to_semi: comma_to_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "comma_to_semi";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        dot_to_colon: dot_to_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "dot_to_colon";
            bindings = <&kp DOT>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        mo_repeat: mo_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_REPEAT";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "balanced";
        };
    };

    macros {
        macos_sleep: macos_sleep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(Q))>, <&macro_wait_time 1000>, <&kp ESC>;

            label = "MACOS_SLEEP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp F      &kp P        &kp B             &kp J      &kp L            &kp U           &kp Y          &kp SINGLE_QUOTE  &trans
&trans  &kp A  &kp R  &kp S      &kp T        &kp G             &kp M      &kp N            &kp E           &kp I          &kp O             &trans
&trans  &kp Z  &kp X  &kp C      &kp D        &kp V             &kp K      &kp H            &comma_to_semi  &dot_to_colon  &kp SLASH         &trans
                      &lt 2 ESC  &lt 3 SPACE  &mt LSHIFT TAB    &kp ENTER  &lt 4 BACKSPACE  &mo_repeat 5 0
            >;
        };

        gam {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U           &kp I           &kp O            &kp P  &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J           &kp UP_ARROW    &kp L            &kp K  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &kp M   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp N  &trans
                      &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        nav {
            bindings = <
&trans  &none      &none     &none     &none       &none     &kp C_PREV      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT       &kp C_PLAY_PAUSE  &trans
&trans  &sk LCTRL  &sk LALT  &sk LGUI  &sk LSHIFT  &none     &kp LEFT        &kp DOWN           &kp UP           &kp RIGHT        &msc SCRL_UP      &trans
&trans  &none      &none     &none     &none       &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN     &mmv MOVE_UP     &mmv MOVE_RIGHT  &msc SCRL_DOWN    &trans
                             &none     &trans      &trans    &mkp LCLK       &mkp RCLK          &mkp MCLK
            >;
        };

        num {
            bindings = <
&trans  &none      &none     &none     &none      &none     &kp PLUS   &kp N7   &kp N8  &kp N9  &kp ASTERISK  &trans
&trans  &sk LCTRL  &sk LALT  &sk LGUI  &sk LSHFT  &none     &kp MINUS  &kp N4   &kp N5  &kp N6  &kp FSLH      &trans
&trans  &none      &none     &none     &none      &none     &kp COMMA  &kp N1   &kp N2  &kp N3  &kp PERCENT   &trans
                             &trans    &none      &trans    &kp EQUAL  &kp DOT  &kp N0
            >;
        };

        sym {
            bindings = <
&trans  &kp LESS_THAN  &kp LEFT_BRACE  &kp LBKT         &kp LEFT_PARENTHESIS  &kp CARET      &kp DOLLAR  &kp RIGHT_PARENTHESIS  &kp RBKT  &kp RIGHT_BRACE  &kp GREATER_THAN  &trans
&trans  &kp AMPERSAND  &kp PIPE        &kp EXCLAMATION  &kp QUESTION          &kp COLON      &kp TILDE   &sk RSHFT              &sk RGUI  &sk RALT         &sk RCTRL         &trans
&trans  &kp PLUS       &kp MINUS       &kp ASTERISK     &kp SLASH             &kp PERCENT    &kp GRAVE   &kp UNDER              &kp AT    &kp HASH         &kp BSLH          &trans
                                       &trans           &trans                &trans         &trans      &none                  &trans
            >;
        };

        sys {
            bindings = <
&none  &macos_sleep  &none         &none         &none         &none           &none   &none      &none     &none     &none      &none
&none  &bt BT_CLR    &none         &none         &none         &none           &none   &sk RSHFT  &sk RCMD  &sk RALT  &sk RCTRL  &none
&none  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &none   &none      &none     &none     &none      &none
                                   &trans        &none         &trans          &trans  &none      &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
